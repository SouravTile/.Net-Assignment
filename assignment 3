//Day3: 
/*Q1)create a class student with member variable name, maths, science, eng
Create a method which will return total marks[300]
Create a method which will display name and total.
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TaskD3
{
    internal class Program
    {
        class Student
        {
            string name;
            public Student(string n)
            {
                name = n;
            }
            public int Total_marks()
            { 
                int m4;
                int m5;
                int m6;
                Console.WriteLine("Enter marks out of 100");
                string math = Console.ReadLine();
                string science = Console.ReadLine();
                string english = Console.ReadLine();
                int.TryParse(math, out m4);
                int.TryParse(science, out m5);
                int.TryParse(english, out m6);
                int m7 = m4 + m5 + m6;
                return m7;
            }
            public void display()
            {
                int marks = 301;
                Console.WriteLine(name);
                int totalmarks = Total_marks();
                if (totalmarks < 0)
                {
                    Console.WriteLine("less than 0 or negative not allowed");
                    Console.ReadLine();
                }
               else if (totalmarks > marks)
                {   
                    Console.WriteLine("Enter correct marks");
                    Console.ReadLine();
                }
                else
                {
                    Console.WriteLine("your total marks out of 300 is {0} ", totalmarks);
                    Console.ReadLine();
                }
            }
        }
            public static void Main(string[] args)
        {
            Student s1 = new Student("Sourav_Tile");
            s1.display();
        } 
    }
}
//-----------------------------------------------------------------------

/*Q2)
create a class account having member name , id, balance
Create a method -public void deposit(int amt){ balance=balance+amt}
Create a method withdraw  -public void withdraw(int amt){ balance=balance-amt}
Create display method which will display name and balance.
Create 2 object and do transaction
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TaskD3
{
    internal class Program
    {
        class Student
        {
            string name;
            int id=0;
            double balance;
            public Student(string n)
            {
                ++id;
                name = n;
            }
            public void Deposit(int amt)
            {
                balance = balance + amt;
            }
            public void withdraw(int amt)
            {
                balance = balance - amt;
            }
            public void display()
            {
                Console.WriteLine(name);
                Console.WriteLine(balance);
            }
        }
            public static void Main(string[] args)
        {
            Student s1 = new Student("Sourav_Tile");
            s1.Deposit(100000);
            s1.withdraw(500);
            s1.display();
            Console.ReadLine();

            Student s2 = new Student("Rohit pagar");
            s2.Deposit(300);
            s2.withdraw(150);
            s2.display();
            Console.ReadLine();
        } 
    }
}

//---------------------------------------------------------------------------
/*
Create class Employee with private vatiable id name salary, netsalary
Create method public double Calculatesal()
Which will return net salary. Netsalary= salary-salary*10%
Create method display which will display Name and net salary.
Create 3 object of a class and call display method.
*/
namespace EmployeeDemo
{
    class Employee
    {
        private int ID;
        private string name;
        private double salary = 80000;
        private double Netsalary;

        public Employee(string n)
        {
            ++ID;
            name = n;
            salary=Calculatesal();
        }
        public double Calculatesal()
        {
            Netsalary = salary - (salary * 0.1);
            return Netsalary;
        }
        public void display()
        {
            Console.WriteLine("name of Employee {0} and Net salary is {1}", name, salary);
        }
    }
    internal class Demo
    {
        public static void Main(string[] args)
        {
            Employee e1 = new Employee("SOURAV");
            Employee e2 = new Employee("ROHIT");
            Employee e3 = new Employee("PRASAD");
            e1.display();
            e2.display();
            e3.display();
            Console.ReadLine();
        }
    }
}
//-----------------------------------------------------------------------------------
/*
Open previous example of Class student
As soon as you run your code it should print name of school
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TaskD3
{
    internal class Program
    {
        class Student
        {
            string name;
     static Employee()
     {
         Console.WriteLine("Ek ka Double School of Mumbai");
     }
            public Student(string n)
            {
                name = n;
            }
            public int Total_marks()
            { 
                int m4;
                int m5;
                int m6;
                Console.WriteLine("Enter marks out of 100");
                string math = Console.ReadLine();
                string science = Console.ReadLine();
                string english = Console.ReadLine();
                int.TryParse(math, out m4);
                int.TryParse(science, out m5);
                int.TryParse(english, out m6);
                int m7 = m4 + m5 + m6;
                return m7;
            }
            public void display()
            {
                int marks = 301;
                Console.WriteLine(name);
                int totalmarks = Total_marks();
                if (totalmarks < 0)
                {
                    Console.WriteLine("less than 0 or negative not allowed");
                    Console.ReadLine();
                }
               else if (totalmarks > marks)
                {   
                    Console.WriteLine("Enter correct marks");
                    Console.ReadLine();
                }
                else
                {
                    Console.WriteLine("your total marks out of 300 is {0} ", totalmarks);
                    Console.ReadLine();
                }
            }
        }
            public static void Main(string[] args)
        {
            Student s1 = new Student("Sourav_Tile");
            s1.display();
        } 
    }
}
//--------------------------------------------------------------------------------------------------
/*Open previous example of Class Account
As soon as you run your code it should print name of the bank
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Account
{
    internal class Program
    {
        static int getid = 0;
        string name;
        double current_balance = 0;
        int pin;
        static Program()
        {
            Console.WriteLine("EK KA Double Bank of India (E K D B I) ");
        }

        public Program(string n,int p) {
            ++getid;
            name = n;
            pin = p;
        }
        public void Deposit(double d)
        {
            current_balance = d+(d*0.1);
        }
        public void Login()
        {
            Console.WriteLine("HELLO MR.{0}. ",name);
            Console.WriteLine("Please Enter Your pin");
            string x = Console.ReadLine();
            int upin=int.Parse(x);
            if (pin == upin)
            {
                Console.WriteLine("Welcome Mr.{0} to our Bank",name);
            }
            else
            {
                throw new Exception("incorrect pin");
            }
        }
        public void Display()
        {   
            Console.WriteLine("displaying your balance");
            Console.WriteLine(getid);    
            Console.WriteLine(name);
            Console.WriteLine(current_balance);
        }
        public void Withdraw(double d)
        { 
            current_balance -= d;
            if (current_balance < 0)
            throw new Exception("zero balance");
            else
            {
                Console.WriteLine(current_balance);
            }
        }
        public static void Main(string[] args)
        {
            Program p = new Program("Sourav Tile", 0007);
            Program q = new Program("SpiderMan from NewYork", 1234);
            try
            {
                p.Login();
                p.Deposit(10000);
                p.Display();
                try
                {
                    p.Withdraw(1999);
                    p.Display();
                }
                catch (Exception e)
                {
                    Console.WriteLine("Insufficient balance !");
                }
            }
            catch(Exception e)
            {
                Console.WriteLine("Invalid pin. Enter a valid pin number");
                Console.ReadLine();
            }
            Console.WriteLine();
            try
            {
                q.Login();
                q.Deposit(10000);
                q.Display();
                try
                {
                    q.Withdraw(1999);
                    q.Display();
                }
                catch (Exception e)
                {
                    Console.WriteLine("Insufficient balance !");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine("Invalid pin. Enter a valid pin number");
                Console.ReadLine();
            }

            Console.ReadLine();
        }
    }
}

//------------------------------------------------------------------------------
/*
3. Create class Employee having member Id, Name, Salary,  NetSalary, Dept d
Create enum Dept {MKT, ADMIN, ADV}
Create method public double paytax(double p) {return tax amount and set netsalary(note: netsalary=salary-salary*p%)}
Create method display to display name and netsalary and department
When you load application it should print name of company.
  new Employee(1,”Raj”,50000,Dept.MKT)
*/
using System;
public enum Dept { MKT, ADMIN, ADV }
public class Employee
{
    public int Id { get; set; }
    public string Name { get; set; }
    public double Salary { get; set; }
    public double NetSalary { get; set; }
    public Dept Department { get; set; }

    public Employee(int id, string name, double salary, Dept department)
    {
        Id = id;
        Name = name;
        Salary = salary;
        Department = department;
        NetSalary = Salary - PayTax(0.1); // Assuming 10% tax
    }
    public double PayTax(double p)
    {
        return Salary * p / 100;
    }
    public void Display()
    {
        Console.WriteLine($"Name: {Name}, Net Salary: {NetSalary}, Department: {Department}");
    }
}
class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine("Welcome to XYZ Company!");
        Employee e = new Employee(1, "Raj", 50000, Dept.MKT);
        e.Display();
    }
}
//-------------------------------------------------------------------------------
/* using getters and setters write program for Employee
*/

namespace EmployeeDemo
{
    class Employee
    {
        private int id;
        private string name;
        private double salary;
        private double Netsalary;
        public int ID
        {
           get { return id; } 
           set { id=value; }
        }
        public double SALARY
        {
            get { return salary; }
            set {salary = value;
                Calculatesal();
                }
        }
        public string NAME
        {
            get { return name; }
            set { name = value; }
        }
        public double paytax(double p)
        {
            Netsalary = salary - (salary * p);
            return Netsalary;
        }
        public double Calculatesal()
        {
            Netsalary=paytax(0.1);
            return Netsalary;
        }
        public void display()
        {
            Console.WriteLine("name of Employee {0} ID {1} and Net salary is {2} ", name, ID,Netsalary);
        }
    }
    internal class Demo
    {
        public static void Main(string[] args)
        {
            Employee e1 = new Employee();
            Employee e2 = new Employee();
            Employee e3 = new Employee();
            e1.ID = 100;
            e2.ID = 200;
            e3.ID = 300;

            e1.NAME = "sourav";
            e2.NAME = "rohit";
            e3.NAME = "prasad";

            e1.SALARY = 10000;
            e2.SALARY = 100000;
            e3.SALARY = 20000;

            e1.display();
            e2.display();
            e3.display();
            Console.ReadLine();
        }
    }
}


